---
import Layout from '../layouts/Layout.astro';

// Press Release Data
const pressReleases = [
  {
    title: "DAHUA PREMIER LEAGUE",
    date: "2024-01-15",
    category: "Events",
    subCategory: "Sports",
    image: "/images/cricket.jpg",
    description: "The game 'Cricket' is not just a mere sport in India but it is a feeling..."
  },
  {
    title: "Built for Digital Education: Dahua launches DeepHub",
    date: "2023-06-27",
    category: "Product Launch",
    subCategory: "Education",
    image: "/images/deephub.jpg",
    description: "Dahua Technology launches the Dahua DeepHub Smart Classroom Solution..."
  }
  // Add more press releases...
];

// Get unique years and categories
const years = [...new Set(pressReleases.map(pr => new Date(pr.date).getFullYear()))].sort().reverse();
const categories = [...new Set(pressReleases.map(pr => pr.category))];
const subCategories = [...new Set(pressReleases.map(pr => pr.subCategory))];
---

<Layout title="Press Releases">
  <!-- Hero Image Section -->
  <div class="relative w-full h-[400px] mb-12">
    <img 
      src="/src/assets/Wireless/heroimg0.png" 
      alt="Press Releases" 
      class="w-full h-full object-cover"
    />
    <div class="absolute inset-0 bg-gradient-to-r from-gray-900/90 to-gray-900/50"></div>
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="text-center">
        <h1 class="text-5xl font-bold text-white mb-4">Press Releases</h1>
        <p class="text-xl text-gray-300">Stay updated with Dahua's latest announcements and news</p>
      </div>
    </div>
  </div>

  <div class="container mx-auto px-4 py-12 max-w-7xl">
    <!-- Filter Section -->
    <div class="bg-white rounded-2xl shadow-lg p-8 mb-12">
      <!-- Year Filter -->
      <div class="mb-8">
        <h3 class="text-xl font-bold mb-4 text-gray-800">Filter by Year</h3>
        <div class="flex flex-wrap gap-2">
          <button 
            class="px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 active" 
            data-filter="year" 
            data-value="all"
          >
            All Years
          </button>
          {years.map(year => (
            <button 
              class="px-6 py-3 bg-white border-2 border-gray-200 rounded-xl hover:border-blue-500 hover:text-blue-600 transition-all duration-300" 
              data-filter="year" 
              data-value={year}
            >
              {year}
            </button>
          ))}
        </div>
      </div>

      <!-- Category Filters -->
      <div class="grid md:grid-cols-2 gap-8">
        <div>
          <h3 class="text-xl font-bold mb-4 text-gray-800">Categories</h3>
          <div class="flex flex-wrap gap-3">
            <button 
              class="px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 active" 
              data-filter="category" 
              data-value="all"
            >
              All Categories
            </button>
            {categories.map(category => (
              <button 
                class="px-6 py-3 bg-white border-2 border-gray-200 rounded-xl hover:border-blue-500 hover:text-blue-600 transition-all duration-300"
                data-filter="category"
                data-value={category}
              >
                {category}
              </button>
            ))}
          </div>
        </div>
        
        <div>
          <h3 class="text-xl font-bold mb-4 text-gray-800">Sub Categories</h3>
          <div class="flex flex-wrap gap-3">
            <button 
              class="px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 active" 
              data-filter="subCategory" 
              data-value="all"
            >
              All Sub Categories
            </button>
            {subCategories.map(subCategory => (
              <button 
                class="px-6 py-3 bg-white border-2 border-gray-200 rounded-xl hover:border-blue-500 hover:text-blue-600 transition-all duration-300"
                data-filter="subCategory"
                data-value={subCategory}
              >
                {subCategory}
              </button>
            ))}
          </div>
        </div>
      </div>
    </div>

    <!-- Press Release Grid -->
    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
      {pressReleases.map(release => (
        <article 
          class="press-release-card group bg-white rounded-2xl shadow-lg overflow-hidden transform hover:-translate-y-1 transition-all duration-300"
          data-year={new Date(release.date).getFullYear()}
          data-category={release.category}
          data-subcategory={release.subCategory}
        >
          <div class="relative overflow-hidden">
            <img 
              src={release.image} 
              alt={release.title} 
              class="w-full h-64 object-cover transform group-hover:scale-110 transition-transform duration-500"
            />
            <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/60 to-transparent p-4">
              <span class="text-white text-sm">
                {new Date(release.date).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </span>
            </div>
          </div>
          <div class="p-6">
            <h2 class="text-xl font-bold mb-4 group-hover:text-blue-600 transition-colors">
              {release.title}
            </h2>
            <p class="text-gray-600 mb-6 line-clamp-3">{release.description}</p>
            <button class="w-full px-6 py-3 bg-gray-100 text-gray-800 rounded-xl hover:bg-blue-600 hover:text-white transition-all duration-300">
              Read More
            </button>
          </div>
        </article>
      ))}
    </div>
  </div>
</Layout>

<script>
  function filterPressReleases() {
    const activeYear = (document.querySelector('[data-filter="year"].active') as HTMLElement)?.dataset.value || 'all';
    const activeCategory = (document.querySelector('[data-filter="category"].active') as HTMLElement)?.dataset.value || 'all';
    const activeSubCategory = (document.querySelector('[data-filter="subCategory"].active') as HTMLElement)?.dataset.value || 'all';

    document.querySelectorAll('.press-release-card').forEach(card => {
      const matchesYear = activeYear === 'all' || (card as HTMLElement).dataset.year === activeYear;
      const matchesCategory = activeCategory === 'all' || (card as HTMLElement).dataset.category === activeCategory;
      const matchesSubCategory = activeSubCategory === 'all' || (card as HTMLElement).dataset.subcategory === activeSubCategory;

      (card as HTMLElement).style.display = matchesYear && matchesCategory && matchesSubCategory ? 'block' : 'none';
    });
  }

  // Add click handlers to filter buttons
  document.querySelectorAll('[data-filter]').forEach(button => {
    button.addEventListener('click', (e) => {
      const target = e.target;
      const filterType = (target as HTMLElement).dataset.filter;
      document.querySelectorAll(`[data-filter="${filterType}"]`).forEach(btn => {
        btn.classList.remove('active', 'bg-blue-600', 'text-white');
        btn.classList.add('border', 'border-gray-300');
      });
      if (target) {
        (target as HTMLElement).classList.add('active', 'bg-blue-600', 'text-white');
      }
      if (target) {
        (target as HTMLElement).classList.remove('border', 'border-gray-300');
      }
      filterPressReleases();
    });
  });
</script>

<style>
  .press-release-card {
    opacity: 0;
    animation: fadeInUp 0.6s ease forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .press-release-card:nth-child(3n+1) { animation-delay: 0.1s; }
  .press-release-card:nth-child(3n+2) { animation-delay: 0.2s; }
  .press-release-card:nth-child(3n+3) { animation-delay: 0.3s; }
</style>